name: $(BuildDefinitionName)_$(date:yyyyMMdd)$(rev:.r)

trigger: none
pr: none

variables:
- group: global-variables
- name: azureSubscription
  value: <service connection name>
- name: terraformVersion
  value: 1.7.4
- name: terraformPath
  value: terraform
- name: tfstatePath
  value: terraform.tfstate
- name: environment
  value: production
- name: prefix
  value: <veryrandomprefix>
- name: location
  value: eastus
- name: kubernetesVersion
  value: '1.27.9'
- name: hub_resource_group_name
  value: 'hub-rg'
- name: spoke_resource_group_name
  value: 'spoke-rg'
- name: aksClusterName
  value: '$(prefix)Aks'
- name: logAnalyticsWorkspaceName
  value: '$(prefix)AksWorkspace'
- name: domainNameLabel
  value: '$(prefix)testvm'
- name: firewallName
  value: '$(prefix)Firewall'
- name: acrName
  value: '$(prefix)Acr'
- name: bastionHostName
  value: '$(prefix)BastionHost'
- name: keyVaultName
  value: '$(prefix)AksKeyVault'
- name: vmName
  value: '$(prefix)Vm'
- name: hubVNetName
  value: '$(prefix)HubVNet'
- name: aksVNetName
  value: '$(prefix)AksVNet'

  
pool:
  name: Default

stages :
- stage: terraform_deployment
  displayName: 'Terraform Deployment'
  jobs: 
  - deployment: production
    displayName: 'Terraform Apply'
    environment: $(environment)
    continueOnError: false
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self

          - task: TerraformInstaller@0
            displayName: 'Terraform Install'
            inputs:
              terraformVersion: $(terraformVersion)
            
          - task: TerraformTaskV2@2
            displayName: 'Terraform Init'
          
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: $(azureSubscription)
              backendAzureRmResourceGroupName: $(terraformBackendResourceGroupName)
              backendAzureRmStorageAccountName: $(terraformBackendStorageAccountName)
              backendAzureRmContainerName: '$(terraformBackendContainerName)'
              backendAzureRmKey: $(tfstatePath)
              workingDirectory: '$(System.DefaultWorkingDirectory)/$(terraformPath)/'
          - task: TerraformTaskV2@2
            displayName: 'Terraform Validate'
            inputs:
              provider: 'azurerm'
              command: 'validate'
          - task: TerraformTaskV2@2
            displayName: 'Terraform Plan'
            inputs:
              provider: 'azurerm'
              command: 'plan'
              commandOptions: '-input=false -var="ssh_public_key=$(sshPublicKey)" -var="location=$(location)"  -var="hub_vnet_name=$(hubVNetName)" -var="aks_vnet_name=$(aksVNetName)" -var="vm_name=$(vmName)" -var="kubernetes_version=$(kubernetesVersion)" -var="hub_resource_group_name=$(hub_resource_group_name)" -var="spoke_resource_group_name=$(spoke_resource_group_name)" -var="aks_cluster_name=$(aksClusterName)" -var="log_analytics_workspace_name=$(logAnalyticsWorkspaceName)" -var="domain_name_label=$(domainNameLabel)" -var="firewall_name=$(firewallName)" -var="acr_name=$(acrName)" -var="bastion_host_name=$(bastionHostName)" -var="key_vault_name=$(keyVaultName)"'
              environmentServiceNameAzureRM: $(azureSubscription)
              workingDirectory: '$(System.DefaultWorkingDirectory)/$(terraformPath)/'
          - task: TerraformTaskV2@2
            displayName: 'Terraform Apply'
            enabled: true
            inputs:
              provider: 'azurerm'
              command: 'apply'
              commandOptions: '-input=false -auto-approve -var="ssh_public_key=$(sshPublicKey)" -var="location=$(location)" -var="hub_vnet_name=$(hubVNetName)" -var="aks_vnet_name=$(aksVNetName)" -var="vm_name=$(vmName)" -var="kubernetes_version=$(kubernetesVersion)" -var="hub_resource_group_name=$(hub_resource_group_name)" -var="spoke_resource_group_name=$(spoke_resource_group_name)" -var="aks_cluster_name=$(aksClusterName)" -var="log_analytics_workspace_name=$(logAnalyticsWorkspaceName)" -var="domain_name_label=$(domainNameLabel)" -var="firewall_name=$(firewallName)" -var="acr_name=$(acrName)" -var="bastion_host_name=$(bastionHostName)" -var="key_vault_name=$(keyVaultName)"'
              environmentServiceNameAzureRM: $(azureSubscription)
              workingDirectory: '$(System.DefaultWorkingDirectory)/$(terraformPath)/'
